---
- name: UPGRADE COCKROACHDB BINARY
  hosts: cockroachdb
  gather_facts: yes
  become: yes
  vars:
    # cockroachdb_version: v23.2.17
    # iknowwhatiamdoing: no
    cockroachdb_autofinalize: yes
    cockroachdb_advertise_addr: "{{ public_ip }}"
    cockroachdb_repo_url: https://binaries.cockroachdb.com
  tasks:
    - name: get current cockroachdb version
      shell: |
        cockroach version | head -n1 | awk '{print $3}'
      register: out

    - name: preserve downgrade
      run_once: yes
      shell: |
        cockroach sql \
          --certs-dir=/var/lib/cockroach/certs \
          --host={{ cockroachdb_advertise_addr }} \
          -e "SET CLUSTER SETTING cluster.preserve_downgrade_option = '{{ out.stdout[1:5] }}';"
      when: not cockroachdb_autofinalize

    - name: Create the binary-type map
      set_fact:
        # map the machine CPU type to the matching filename component
        bin_arch:
          aarch64: arm64
          x86_64: amd64

    - name: Check that the CockroachDB tarball exists locally
      stat:
        path: cockroach-{{ cockroachdb_version }}.linux-{{ bin_arch[ansible_architecture] }}.tgz
      register: out

    - name: Download CockroachDB binary
      shell: |
        wget -q {{ cockroachdb_repo_url }}/cockroach-{{ cockroachdb_version }}.linux-{{ bin_arch[ansible_architecture] }}.tgz
      when: not out.stat.exists
    
    - name: Install CockroachDB binary
      shell: |
        tar xvf cockroach-{{ cockroachdb_version }}.linux-{{ bin_arch[ansible_architecture] }}.tgz
        mv cockroach-{{ cockroachdb_version }}.linux-{{ bin_arch[ansible_architecture] }}/cockroach /usr/local/bin/cockroach
        chmod 755 /usr/local/bin/cockroach
        mkdir -p /usr/local/lib/cockroach/
        mv cockroach-{{ cockroachdb_version }}.linux-{{ bin_arch[ansible_architecture] }}/lib/libgeos*.so /usr/local/lib/cockroach/
        rm -rf cockroach-{{ cockroachdb_version }}.linux-{{ bin_arch[ansible_architecture] }}
  

- name: RESTART COCKROACHDB
  hosts: cockroachdb
  gather_facts: no
  serial: 1
  become: yes
  vars:
    cockroachdb_upgrade_delay: 30
  tasks:
    - name: Ensure cockroachdb service is restarted
      shell: |
        systemctl restart cockroachdb

    - name: Wait until the node has rejoined the cluster
      shell: |
        # TODO
        sleep 5
        
    - name: Pause between upgrades
      pause:
        seconds: "{{ cockroachdb_upgrade_delay }}"
